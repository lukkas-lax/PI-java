-- MySQL Script generated by MySQL Workbench
-- Tue Apr  2 20:12:16 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;




-- -----------------------------------------------------
-- Table `mydb`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`professor` (
  `professor_id` INT NOT NULL,
  `administrador` INT NULL DEFAULT 0,
  `matricula` VARCHAR(45) NULL,
  PRIMARY KEY (`professor_id`),
  INDEX `fk_Professor_Usuario_idx` (`professor_id` ASC) VISIBLE,
  UNIQUE INDEX `matricula_UNIQUE` (`matricula` ASC) VISIBLE,
  CONSTRAINT `fk_Professor_Usuario`
    FOREIGN KEY (`professor_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`aluno` (
  `aluno_id` INT NOT NULL,
  `ra` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`aluno_id`),
  UNIQUE INDEX `ra_UNIQUE` (`ra` ASC) VISIBLE,
  CONSTRAINT `fk_Aluno_Usuario1`
    FOREIGN KEY (`aluno_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tema` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dt_cadastro` DATETIME NULL,
  `titulo` VARCHAR(100) NOT NULL,
  `introducao` VARCHAR(250) NULL,
  `requisitos` VARCHAR(1000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`turma` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `semestre_letivo` INT NULL,
  `ano_letivo` INT NULL,
  `sigla` VARCHAR(45) NULL,
  `tema_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_turma_tema1_idx` (`tema_id` ASC) VISIBLE,
  UNIQUE INDEX `idx_uk_sigla_ano_semestre` (`semestre_letivo` ASC, `ano_letivo` ASC, `sigla` ASC) VISIBLE,
  CONSTRAINT `fk_turma_tema1`
    FOREIGN KEY (`tema_id`)
    REFERENCES `mydb`.`tema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`grupo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `orientador_id` INT NOT NULL,
  `numero` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_grupo_Professor1_idx` (`orientador_id` ASC) VISIBLE,
  CONSTRAINT `fk_grupo_Professor1`
    FOREIGN KEY (`orientador_id`)
    REFERENCES `mydb`.`professor` (`professor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`turma_aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`turma_aluno` (
  `Aluno_id` INT NOT NULL,
  `turma_id` INT NOT NULL,
  `grupo_id` INT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  INDEX `fk_Aluno_has_turma_turma1_idx` (`turma_id` ASC) VISIBLE,
  INDEX `fk_Aluno_has_turma_Aluno1_idx` (`Aluno_id` ASC) VISIBLE,
  INDEX `fk_Aluno_has_turma_grupo1_idx` (`grupo_id` ASC) VISIBLE,
  INDEX `idx_aluno_turma` (`Aluno_id` ASC, `turma_id` ASC) VISIBLE,
  CONSTRAINT `fk_Aluno_has_turma_Aluno1`
    FOREIGN KEY (`Aluno_id`)
    REFERENCES `mydb`.`aluno` (`aluno_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_turma_turma1`
    FOREIGN KEY (`turma_id`)
    REFERENCES `mydb`.`turma` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_turma_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `mydb`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`banca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`banca` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grupo_id` INT NOT NULL,
  `data` DATETIME NULL,
  `sala` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_banca_grupo1_idx` (`grupo_id` ASC) VISIBLE,
  CONSTRAINT `fk_banca_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `mydb`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`professores_banca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`professores_banca` (
  `banca_id` INT NOT NULL,
  `Professor_id` INT NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `avaliacao` DECIMAL(4,2) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_banca_has_Professor_Professor1_idx` (`Professor_id` ASC) VISIBLE,
  INDEX `fk_banca_has_Professor_banca1_idx` (`banca_id` ASC) VISIBLE,
  INDEX `idx_banca_prof` (`banca_id` ASC, `Professor_id` ASC) VISIBLE,
  CONSTRAINT `fk_banca_has_Professor_banca1`
    FOREIGN KEY (`banca_id`)
    REFERENCES `mydb`.`banca` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_banca_has_Professor_Professor1`
    FOREIGN KEY (`Professor_id`)
    REFERENCES `mydb`.`professor` (`professor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`atividade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`atividade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tema_id` INT NOT NULL,
  `numero` INT NULL,
  `descricao` VARCHAR(250) NULL,
  `formato_entrega` VARCHAR(45) NULL,
  `dt_inicio` DATETIME NULL,
  `dt_fim` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_atividade_tema1_idx` (`tema_id` ASC) VISIBLE,
  CONSTRAINT `fk_atividade_tema1`
    FOREIGN KEY (`tema_id`)
    REFERENCES `mydb`.`tema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`entrega` (
  `grupo_id` INT NOT NULL,
  `atividade_id` INT NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  `dt_cadastro` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_grupo_has_entregas_entregas1_idx` (`atividade_id` ASC) VISIBLE,
  INDEX `fk_grupo_has_entregas_grupo1_idx` (`grupo_id` ASC) VISIBLE,
  INDEX `idx_grupo_ativ` (`grupo_id` ASC, `atividade_id` ASC) VISIBLE,
  CONSTRAINT `fk_grupo_has_entregas_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `mydb`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupo_has_entregas_entregas1`
    FOREIGN KEY (`atividade_id`)
    REFERENCES `mydb`.`atividade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`avaliacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`avaliacao` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `entrega_id` INT NOT NULL,
  `turma_aluno_id` INT NOT NULL,
  `nota` DECIMAL(4,2) NULL,
  `dt_avaliacao` DATETIME NULL,
  `comentarios` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Avaliacao_entregas1_idx` (`entrega_id` ASC) VISIBLE,
  INDEX `fk_Avaliacao_Aluno_has_turma1_idx` (`turma_aluno_id` ASC) VISIBLE,
  CONSTRAINT `fk_Avaliacao_entregas1`
    FOREIGN KEY (`entrega_id`)
    REFERENCES `mydb`.`entrega` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Avaliacao_Aluno_has_turma1`
    FOREIGN KEY (`turma_aluno_id`)
    REFERENCES `mydb`.`turma_aluno` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE usuarioLogin (
username VARCHAR(100) NOT NULL,
password VARCHAR(100) NOT NULL,
PRIMARY KEY (username))
ENGINE = InnoDB;

INSERT into tema (dt_cadastro,titulo,introducao,requisitos) values
('2019-02-01','D.A','tema1','req1'),
('2019-01-01','D.B','tema2','req2'),
('2019-03-01','D.C','tema3','req3'),
('2019-04-01','D.D','tema4','req4'),
('2019-05-01','D.E','tema5','req5'),
('2019-06-01','D.F','tema6','req6'),
('2019-07-01','D.G','tema7','req7');


INSERT into turma (semestre_letivo, ano_letivo, sigla, tema_id) values

(1, 2019, 'SIN-MCA', 1),
(2, 2019, 'CI-MCA', 2),
(1, 2018, 'MV-MCA', 3),
(2, 2018, 'EE-MCA', 4),
(1, 2017, 'ADS-MCA', 1),
(2, 2017, 'EC-MCA', 1);



insert into usuario (nome,email,senha) values
('Lucas', 'lucas@hotmail.com', 'senha123'),
('Manoel', 'manoel@htomail.com', 'monel123'),
('Leticia', 'leticia@hotmail.com', 'leticia123'),
('Giovana', 'giovana@hotmail.com', 'giovana123'),
('Larissa', 'larissa@hotmail.com', 'larissa123'),
('Amanda', 'amanda@hotmail.com', 'amanda123'),
('Clara', 'clara@hotmail.com', 'clara123'),
('Maria', 'maria@hotmail.com', 'maria123'),
('Laura', 'laura@hotmail.com', 'laura123'),
('Bianca', 'bianca@hotmail.com', 'bianca123'),
('Beatriz', 'beatriz@hotmail.com', 'beatriz123'),
('Ellen', 'ellen@hotmail.com', 'ellen123'),
('Yasmin', 'yasmin@hotmail.com', 'yasmin123'),
('Ana', 'ana@hotmail.com', 'ana123'),
('Marta', 'marta@hotmail.com', 'marta123'),
('Rafaela', 'rafaela@hotmail.com', 'rafaela123'),
('Izadora', 'izadora@hotmail.com', 'izadora123'),
('Natalia', 'natalia@hotmail.com', 'natalia123'),
('Fernanda', 'fernanda@hotmail.com', 'fernanda123'),
('Izabel', 'izabel@hotmail.com', 'izabel123'),
('Gabriela', 'gabriela@hotmail.com', 'gabriela123'),
('Noah', 'noah@hotmail.com', 'noah123'),
('Janaina', 'janaina@hotmail.com', 'janaina123'),
('Karina', 'karina@hotmail.com', 'karina123'),
('Michelle', 'michelle@hotmail.com', 'michelle123'),
('Regina', 'regina@hotmail.com', 'regina123'),
('Andreia', 'andreia@hotmail.com', 'andreia123'),
('Dilma', 'dilma@hotmail.com', 'dilma123'),
('Julia', 'julia@hotmail.com', 'julia123'),
('Bruna', 'bruna@hotmail.com', 'bruna123'),
('Abigail', 'Abigail@hotmail.com', 'Abigail123'),
('John', 'John@hotmail.com', 'John123'),
('Ebenezer', 'Ebenezer@hotmail.com', 'Ebenezer123');


insert into aluno (aluno_id, ra) values
(1, '818121050'),
(2, '788956325'),
(3, '859665478'),
(4, '856321456'),
(5, '898956236'),
(6, '789465513'),
(7, '788464325'),
(8, '312454346'),
(9, '875464641'),
(10, '316466424'),
(11, '312455427'),
(12, '978464314'),
(13, '879464558'),
(14, '976645885'),
(15, '879464685'),
(16, '312404570'),
(17, '003646677'),
(18, '023625445'),
(19, '897546461'),
(20, '879454646'),
(31, '785412365'),
(32, '784565323'),
(33, '111236699');


insert into professor(professor_id,administrador,matricula) values
(21, 0, '100012'),
(22, 0, '100013'),
(23, 0, '100014'),
(24, 0, '100015'),
(25, 0, '100016'),
(26, 1, '100017'),
(27, 1, '100018'),
(28, 1, '100019'),
(29, 1, '100020'),
(30, 1, '100021');

INSERT into grupo (orientador_id, numero, nome) values
(21, 1, 'Alfa'),
(22, 2, 'Bravo'),
(23, 3, 'Charlie'),
(24, 1, 'Delta'),
(25, 2, 'Echo'),
(26, 3, 'Foxtrot'),
(27, 1, 'Golf'),
(28, 2, 'Hotel'),
(29, 3, 'India'),
(30, 1, 'Juliett'),
(21, 2, 'Kilo'),
(22, 3, 'Lima'),
(23, 1, 'Mike'),
(24, 2, 'November'),
(25, 3, 'Oscar'),
(26, 1, 'Papa'),
(27, 2, 'Quebec'),
(28, 3, 'Romeo'),
(29, 1, 'Sierra'),
(30, 2, 'Tango');

insert into turma_aluno (Aluno_id,turma_id,grupo_id) values
(1, 1, 1),
(2, 2, 4),
(3, 3, 7),
(4, 4, 9),
(5, 1, 1),
(6, 1, 1),
(7, 1, 1),
(8, 2, 5),
(9, 3, 8),
(10, 4, 10),
(11, 5, 11),
(12, 6, 13),
(13, 1, 13),
(14, 2, 14),
(15, 3, 15),
(16, 4, 16),
(17, 5, 12),
(18, 6, 14),
(19, 1, 3),
(20, 2, 6);


insert into atividade (tema_id,numero,descricao,formato_entrega,dt_inicio,dt_fim) values
(1, 10,'Email','txt', '2019-02-01', '2019-06-20'),
(2, 11,'Email','txt', '2019-02-02', '2019-06-21'),
(3, 12,'Email', 'txt','2019-02-03', '2019-06-22'),
(4, 13, 'Email','txt', '2019-02-04', '2019-06-23'),
(5, 14, 'Email','txt', '2019-02-05', '2019-06-24'),
(6, 15, 'Email','txt', '2019-02-07', '2019-06-25'),
(7, 16, 'Email','txt', '2019-02-08', '2019-06-26');

insert into entrega (grupo_id,atividade_id,dt_cadastro) values
(1, 1, '2019-02-01'),
(1, 2, '2019-03-02'),
(1, 3, '2019-03-03'),
(2, 4, '2019-04-15'),
(2, 5, '2019-04-16'),
(2, 6, '2019-04-17'),
(3, 7, '2019-05-25'),
(8, 1, '2019-05-26'),
(9, 2, '2019-06-27'),
(10, 3, '2019-06-28');

insert into avaliacao (entrega_id,turma_aluno_id,nota,dt_avaliacao,comentarios) values
(1, 1,10.0 ,'2019-07-25','hater'),
(1, 2,8.5, '2019-07-25','teste'),
(1, 3,10.0 , '2019-07-25','joy'),
(1, 4,10.0 , '2019-07-25','Marciano'),
(5, 5, 10.0 ,'2019-07-25','Lambida'),
(6, 6,8.5, '2019-07-25','Mesa giratória'),
(7, 7,10.0 , '2019-07-25','Pai'),
(8, 8,10.0 , '2019-07-25','Tesouro'),
(9, 9,8.5, '2019-07-25','Bumerangue'),
(10, 10,10.0 , '2019-07-25','Girino'),

(1, 11,10.0 , '2019-08-10','Picada'),
(2, 12,8.5, '2019-08-10','Bússola'),
(3, 13,10.0 , '2019-08-10','Caribe'),
(4, 14,8.5, '2019-08-10','Bater'),
(5, 15,10.0 , '2019-08-10','Parquímetro'),
(6, 16,8.5, '2019-08-10','Glândulas'),
(7, 17,10.0 , '2019-08-10','Filmes'),
(8, 18,8.5, '2019-08-10','Abduzir'),
(9, 19,10.0 , '2019-08-10','Relâmpago'),
(10, 20,8.5, '2019-08-10','Forro'),

(1, 1,10.0 , '2019-08-09','Casca'),
(2, 2,8.5, '2019-08-09','Mental'),
(3, 3,10.0 , '2019-08-09','Toalha'),
(4, 4,8.5, '2019-08-09','Mocassim'),
(5, 5,10.0 , '2019-08-09','Domador'),
(6, 6,8.5, '2019-08-09','Palavra'),
(7, 7,10.0 , '2019-08-09','Tocha'),
(8, 8,8.5, '2019-08-09','Aço'),
(9, 9,8.5, '2019-08-09','Tabela'),
(10, 10,8.5, '2019-08-09','Sogro'),

(1, 11,8.5, '2019-09-17','Linha'),
(2, 12,10.0 , '2019-09-17','Honrado'),
(3, 13,8.5, '2019-09-17','Experiência'),
(4, 14,10.0 , '2019-09-17','Câmera'),
(5, 15,8.5, '2019-09-17','Presidente'),
(6, 16,10.0 , '2019-09-17','Inteligência'),
(7, 17,8.5, '2019-09-17','Cortiça'),
(8, 18,10.0 , '2019-09-17','Siamês'),
(9, 19,8.5, '2019-09-17','Binóculo'),
(10, 20,8.5, '2019-09-17','Olhos'),

(2, 1,8.5, '2019-09-17','Italiano'),
(2, 2,10.0 , '2019-09-17','Livros'),
(3, 3,10.0 , '2019-07-25','Atual'),
(4, 4,8.5, '2019-07-25','Gaiolas'),
(5, 5,8.5, '2019-07-25','Meia hora'),
(6, 6,8.5, '2019-07-25','Bigodes'),
(7, 7,8.5, '2019-07-25','Medicina'),
(8, 8,8.5, '2019-07-25','Mapa do Mundo'),
(9, 9,8.5, '2019-07-25','Táxi'),
(10, 10,8.5, '2019-07-25','Frágil'),

(1, 11,10.0 , '2019-07-25','Urna'),
(2, 12,8.5, '2019-07-25','Gancho');




select * from tema;
select * from grupo;
select * from turma;
select * from usuario;
select * from aluno;
SELECT * FROM turma_aluno;
SELECT turma.id,turma.sigla,turma.ano_letivo,turma.semestre_letivo FROM turma INNER JOIN turma_aluno ON turma.id = turma_aluno.turma_id INNER JOIN grupo ON turma_aluno.grupo_id = grupo.id INNER JOIN professor ON grupo.orientador_id = professor.professor_id INNER JOIN usuario ON professor.professor_id = usuario.id WHERE usuario.id = 6;
SELECT grupo.numero, grupo.nome FROM grupo INNER JOIN turma_aluno ON grupo.id = turma_aluno.grupo_id INNER JOIN turma ON turma_aluno.turma_id = turma.id where turma.id = 1;
SELECT grupo.numero, grupo.nome, grupo.id FROM grupo INNER JOIN turma_aluno ON grupo.id = turma_aluno.grupo_id INNER JOIN turma ON turma_aluno.turma_id = turma.id where turma.id = 1;



SELECT aluno.aluno_id, aluno.ra,usuario.nome FROM usuario INNER JOIN aluno ON usuario.id = aluno.aluno_id INNER JOIN turma_aluno ON aluno.aluno_id = turma_aluno.Aluno_id INNER JOIN grupo ON turma_aluno.grupo_id = grupo.id where grupo.id = 2;


SELECT avaliacao.id,avaliacao.nota,avaliacao.dt_avaliacao,avaliacao.comentarios FROM avaliacao INNER JOIN turma_aluno ON avaliacao.turma_aluno_id = turma_aluno.id INNER JOIN aluno ON turma_aluno.Aluno_id = aluno.aluno_id where aluno.aluno_id = 1;


SELECT turma_aluno.Aluno_id,entrega.id, entrega.dt_cadastro,avaliacao.id,avaliacao.nota,avaliacao.dt_avaliacao,avaliacao.comentarios FROM entrega INNER JOIN avaliacao ON entrega.id = avaliacao.entrega_id INNER JOIN turma_aluno ON avaliacao.turma_aluno_id = turma_aluno.id INNER JOIN grupo ON turma_aluno.grupo_id = grupo.id where grupo.id = 1;

SELECT atividade.numero,entrega.id, entrega.dt_cadastro,avaliacao.id,avaliacao.nota,avaliacao.dt_avaliacao,avaliacao.comentarios FROM atividade INNER JOIN entrega ON atividade.id = entrega.atividade_id INNER JOIN avaliacao ON entrega.id = avaliacao.entrega_id INNER JOIN turma_aluno ON avaliacao.turma_aluno_id = turma_aluno.id INNER JOIN grupo ON turma_aluno.grupo_id = grupo.id where grupo.id = 1;

SELECT atividade.numero,entrega.id, entrega.dt_cadastro,avaliacao.id,avaliacao.nota,avaliacao.dt_avaliacao,avaliacao.comentarios, usuario.nome FROM atividade INNER JOIN entrega ON atividade.id = entrega.atividade_id INNER JOIN avaliacao ON entrega.id = avaliacao.entrega_id INNER JOIN turma_aluno ON avaliacao.turma_aluno_id = turma_aluno.id INNER JOIN usuario ON turma_aluno.Aluno_id = usuario.id  INNER JOIN grupo ON turma_aluno.grupo_id = grupo.id where grupo.id = 1 GROUP BY numero;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
